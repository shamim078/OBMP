#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FluentMappingGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using OBMPDataModel;
using Telerik.OpenAccess.Metadata.Relational;

namespace OBMPDataModel
{

	public partial class FluentModelMetadataSource : FluentMetadataSource
	{
		
		protected override IList<MappingConfiguration> PrepareMapping()
		{
			List<MappingConfiguration> mappingConfigurations = new List<MappingConfiguration>();
			
			MappingConfiguration<Webpages_Role> webpages_roleConfiguration = this.GetWebpages_RoleMappingConfiguration();
			mappingConfigurations.Add(webpages_roleConfiguration);
			
			MappingConfiguration<UserProfile> userprofileConfiguration = this.GetUserProfileMappingConfiguration();
			mappingConfigurations.Add(userprofileConfiguration);
			
			MappingConfiguration<SalesRepresentative> salesrepresentativeConfiguration = this.GetSalesRepresentativeMappingConfiguration();
			mappingConfigurations.Add(salesrepresentativeConfiguration);
			
			MappingConfiguration<SaleRepCustomer> salerepcustomerConfiguration = this.GetSaleRepCustomerMappingConfiguration();
			mappingConfigurations.Add(salerepcustomerConfiguration);
			
			MappingConfiguration<ProductTieredUsage> producttieredusageConfiguration = this.GetProductTieredUsageMappingConfiguration();
			mappingConfigurations.Add(producttieredusageConfiguration);
			
			MappingConfiguration<ProductSubcategory> productsubcategoryConfiguration = this.GetProductSubcategoryMappingConfiguration();
			mappingConfigurations.Add(productsubcategoryConfiguration);
			
			MappingConfiguration<ProductShareType> productsharetypeConfiguration = this.GetProductShareTypeMappingConfiguration();
			mappingConfigurations.Add(productsharetypeConfiguration);
			
			MappingConfiguration<ProductCategory> productcategoryConfiguration = this.GetProductCategoryMappingConfiguration();
			mappingConfigurations.Add(productcategoryConfiguration);
			
			MappingConfiguration<Product> productConfiguration = this.GetProductMappingConfiguration();
			mappingConfigurations.Add(productConfiguration);
			
			MappingConfiguration<Payment> paymentConfiguration = this.GetPaymentMappingConfiguration();
			mappingConfigurations.Add(paymentConfiguration);
			
			MappingConfiguration<Partner> partnerConfiguration = this.GetPartnerMappingConfiguration();
			mappingConfigurations.Add(partnerConfiguration);
			
			MappingConfiguration<OrderStatusCode> orderstatuscodeConfiguration = this.GetOrderStatusCodeMappingConfiguration();
			mappingConfigurations.Add(orderstatuscodeConfiguration);
			
			MappingConfiguration<OrderEvent> ordereventConfiguration = this.GetOrderEventMappingConfiguration();
			mappingConfigurations.Add(ordereventConfiguration);
			
			MappingConfiguration<OrderDetail> orderdetailConfiguration = this.GetOrderDetailMappingConfiguration();
			mappingConfigurations.Add(orderdetailConfiguration);
			
			MappingConfiguration<Order> orderConfiguration = this.GetOrderMappingConfiguration();
			mappingConfigurations.Add(orderConfiguration);
			
			MappingConfiguration<MarketPlaceSection> marketplacesectionConfiguration = this.GetMarketPlaceSectionMappingConfiguration();
			mappingConfigurations.Add(marketplacesectionConfiguration);
			
			MappingConfiguration<Customer> customerConfiguration = this.GetCustomerMappingConfiguration();
			mappingConfigurations.Add(customerConfiguration);
			
			MappingConfiguration<Billing> billingConfiguration = this.GetBillingMappingConfiguration();
			mappingConfigurations.Add(billingConfiguration);
			
			MappingConfiguration<ProductView> productviewConfiguration = this.GetProductViewMappingConfiguration();
			mappingConfigurations.Add(productviewConfiguration);
			
			return mappingConfigurations;
		}
		
		protected override void SetContainerSettings(MetadataContainer container)
		{
			container.Name = "FluentModel";
			container.DefaultNamespace = "OBMPDataModel";
			container.NameGenerator.SourceStrategy = Telerik.OpenAccess.Metadata.NamingSourceStrategy.Property;
			container.NameGenerator.RemoveCamelCase = false;
		}
		public MappingConfiguration<Webpages_Role> GetWebpages_RoleMappingConfiguration()
		{
			MappingConfiguration<Webpages_Role> configuration = this.GetWebpages_RoleClassConfiguration();
			this.PrepareWebpages_RolePropertyConfigurations(configuration);
			this.PrepareWebpages_RoleAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Webpages_Role> GetWebpages_RoleClassConfiguration()
		{
			MappingConfiguration<Webpages_Role> configuration = new MappingConfiguration<Webpages_Role>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("webpages_Roles");
	
			return configuration;
		}
	
		public void PrepareWebpages_RolePropertyConfigurations(MappingConfiguration<Webpages_Role> configuration)
		{
			configuration.HasProperty(x => x.RoleId).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_roleId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RoleId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RoleName).HasFieldName("_roleName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RoleName").IsNotNullable().HasColumnType("nvarchar").HasLength(256);
		}
	
		public void PrepareWebpages_RoleAssociationConfigurations(MappingConfiguration<Webpages_Role> configuration)
		{
			configuration.HasAssociation(x => x.UserProfiles).HasFieldName("_userProfiles").WithOpposite(x => x.Webpages_Roles).WithDataAccessKind(DataAccessKind.ReadWrite).MapJoinTable("webpages_UsersInRoles", (x, y) => new{RoleId = x.RoleId, UserId = y.UserId}).CreatePrimaryKeyFromForeignKeys();
		}
		
		public MappingConfiguration<UserProfile> GetUserProfileMappingConfiguration()
		{
			MappingConfiguration<UserProfile> configuration = this.GetUserProfileClassConfiguration();
			this.PrepareUserProfilePropertyConfigurations(configuration);
			this.PrepareUserProfileAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<UserProfile> GetUserProfileClassConfiguration()
		{
			MappingConfiguration<UserProfile> configuration = new MappingConfiguration<UserProfile>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("UserProfile");
	
			return configuration;
		}
	
		public void PrepareUserProfilePropertyConfigurations(MappingConfiguration<UserProfile> configuration)
		{
			configuration.HasProperty(x => x.UserId).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_userId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UserId").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UserName).HasFieldName("_userName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UserName").IsNullable().HasColumnType("nvarchar(max)").HasLength(0);
		}
	
		public void PrepareUserProfileAssociationConfigurations(MappingConfiguration<UserProfile> configuration)
		{
			configuration.HasAssociation(x => x.Webpages_Roles).HasFieldName("_webpages_Roles").WithOpposite(x => x.UserProfiles).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<SalesRepresentative> GetSalesRepresentativeMappingConfiguration()
		{
			MappingConfiguration<SalesRepresentative> configuration = this.GetSalesRepresentativeClassConfiguration();
			this.PrepareSalesRepresentativePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<SalesRepresentative> GetSalesRepresentativeClassConfiguration()
		{
			MappingConfiguration<SalesRepresentative> configuration = new MappingConfiguration<SalesRepresentative>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("SalesRepresentative");
	
			return configuration;
		}
	
		public void PrepareSalesRepresentativePropertyConfigurations(MappingConfiguration<SalesRepresentative> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.Email).HasFieldName("_email").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Email").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.DateCreated).HasFieldName("_dateCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DateCreated").IsNullable().HasColumnType("date");
		}
		public MappingConfiguration<SaleRepCustomer> GetSaleRepCustomerMappingConfiguration()
		{
			MappingConfiguration<SaleRepCustomer> configuration = this.GetSaleRepCustomerClassConfiguration();
			this.PrepareSaleRepCustomerPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<SaleRepCustomer> GetSaleRepCustomerClassConfiguration()
		{
			MappingConfiguration<SaleRepCustomer> configuration = new MappingConfiguration<SaleRepCustomer>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("SaleRepCustomer");
	
			return configuration;
		}
	
		public void PrepareSaleRepCustomerPropertyConfigurations(MappingConfiguration<SaleRepCustomer> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SalesRepresentativeID).HasFieldName("_salesRepresentativeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesRepresentativeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.MappedDate).HasFieldName("_mappedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MappedDate").IsNullable().HasColumnType("date");
		}
		public MappingConfiguration<ProductTieredUsage> GetProductTieredUsageMappingConfiguration()
		{
			MappingConfiguration<ProductTieredUsage> configuration = this.GetProductTieredUsageClassConfiguration();
			this.PrepareProductTieredUsagePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductTieredUsage> GetProductTieredUsageClassConfiguration()
		{
			MappingConfiguration<ProductTieredUsage> configuration = new MappingConfiguration<ProductTieredUsage>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("ProductTieredUsage");
	
			return configuration;
		}
	
		public void PrepareProductTieredUsagePropertyConfigurations(MappingConfiguration<ProductTieredUsage> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Lower).HasFieldName("_lower").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Lower").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Upper).HasFieldName("_upper").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Upper").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Charge).HasFieldName("_charge").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Charge").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
		}
		public MappingConfiguration<ProductSubcategory> GetProductSubcategoryMappingConfiguration()
		{
			MappingConfiguration<ProductSubcategory> configuration = this.GetProductSubcategoryClassConfiguration();
			this.PrepareProductSubcategoryPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductSubcategory> GetProductSubcategoryClassConfiguration()
		{
			MappingConfiguration<ProductSubcategory> configuration = new MappingConfiguration<ProductSubcategory>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("ProductSubcategory");
	
			return configuration;
		}
	
		public void PrepareProductSubcategoryPropertyConfigurations(MappingConfiguration<ProductSubcategory> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductCategoryID).HasFieldName("_productCategoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductCategoryID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
		}
		public MappingConfiguration<ProductShareType> GetProductShareTypeMappingConfiguration()
		{
			MappingConfiguration<ProductShareType> configuration = this.GetProductShareTypeClassConfiguration();
			this.PrepareProductShareTypePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductShareType> GetProductShareTypeClassConfiguration()
		{
			MappingConfiguration<ProductShareType> configuration = new MappingConfiguration<ProductShareType>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("ProductShareType");
	
			return configuration;
		}
	
		public void PrepareProductShareTypePropertyConfigurations(MappingConfiguration<ProductShareType> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
		}
		public MappingConfiguration<ProductCategory> GetProductCategoryMappingConfiguration()
		{
			MappingConfiguration<ProductCategory> configuration = this.GetProductCategoryClassConfiguration();
			this.PrepareProductCategoryPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductCategory> GetProductCategoryClassConfiguration()
		{
			MappingConfiguration<ProductCategory> configuration = new MappingConfiguration<ProductCategory>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("ProductCategory");
	
			return configuration;
		}
	
		public void PrepareProductCategoryPropertyConfigurations(MappingConfiguration<ProductCategory> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
		}
		public MappingConfiguration<Product> GetProductMappingConfiguration()
		{
			MappingConfiguration<Product> configuration = this.GetProductClassConfiguration();
			this.PrepareProductPropertyConfigurations(configuration);
			this.PrepareProductAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Product> GetProductClassConfiguration()
		{
			MappingConfiguration<Product> configuration = new MappingConfiguration<Product>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Product");
	
			return configuration;
		}
	
		public void PrepareProductPropertyConfigurations(MappingConfiguration<Product> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductCode).HasFieldName("_productCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductCode").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.PartnerProductName).HasFieldName("_partnerProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.SSOTProductName).HasFieldName("_sSOTProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SSOTProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.SAPProductName).HasFieldName("_sAPProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SAPProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.GSMISProductName).HasFieldName("_gSMISProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("GSMISProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Description").IsNullable().HasColumnType("nvarchar").HasLength(250);
			configuration.HasProperty(x => x.PartnerID).HasFieldName("_partnerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.DateRegistered).HasFieldName("_dateRegistered").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DateRegistered").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.EffectiveDate).HasFieldName("_effectiveDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EffectiveDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.EndDate).HasFieldName("_endDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EndDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.MarketPlaceSectionID).HasFieldName("_marketPlaceSectionID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MarketPlaceSectionID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SubCategoryID).HasFieldName("_subCategoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SubCategoryID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ChargeFrequency).HasFieldName("_chargeFrequency").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ChargeFrequency").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.ChargeType).HasFieldName("_chargeType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ChargeType").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.Charge).HasFieldName("_charge").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Charge").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.ApplyGST).HasFieldName("_applyGST").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ApplyGST").IsNullable().HasColumnType("bit").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RevenuShareType).HasFieldName("_revenuShareType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RevenuShareType").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.FixedOperatorRevenue).HasFieldName("_fixedOperatorRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FixedOperatorRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.FixedPartnerRevenue).HasFieldName("_fixedPartnerRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FixedPartnerRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PercentageOperatorRevenue).HasFieldName("_percentageOperatorRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PercentageOperatorRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PercentagePartnerRevenue).HasFieldName("_percentagePartnerRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PercentagePartnerRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecurringFixedMonth).HasFieldName("_recurringFixedMonth").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RecurringFixedMonth").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductStatus).HasFieldName("_productStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductStatus").IsNullable().HasColumnType("nvarchar").HasLength(20);
		}
	
		public void PrepareProductAssociationConfigurations(MappingConfiguration<Product> configuration)
		{
			configuration.HasAssociation(x => x.Partner).HasFieldName("_partner").WithOpposite(x => x.Products).ToColumn("PartnerID").HasConstraint((x, y) =>  x.PartnerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.OrderDetails).HasFieldName("_orderDetails").WithOpposite(x => x.Product).ToColumn("ProductID").HasConstraint((y, x) =>  x.ProductID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Payment> GetPaymentMappingConfiguration()
		{
			MappingConfiguration<Payment> configuration = this.GetPaymentClassConfiguration();
			this.PreparePaymentPropertyConfigurations(configuration);
			this.PreparePaymentAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Payment> GetPaymentClassConfiguration()
		{
			MappingConfiguration<Payment> configuration = new MappingConfiguration<Payment>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Payment");
	
			return configuration;
		}
	
		public void PreparePaymentPropertyConfigurations(MappingConfiguration<Payment> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SalesOrderID).HasFieldName("_salesOrderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PartnerID).HasFieldName("_partnerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PaymentDate).HasFieldName("_paymentDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PaymentDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.PaidAmount).HasFieldName("_paidAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PaidAmount").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.PaymentMethod).HasFieldName("_paymentMethod").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PaymentMethod").IsNullable().HasColumnType("nvarchar").HasLength(50);
		}
	
		public void PreparePaymentAssociationConfigurations(MappingConfiguration<Payment> configuration)
		{
			configuration.HasAssociation(x => x.Order).HasFieldName("_order").WithOpposite(x => x.Payments).ToColumn("SalesOrderID").HasConstraint((x, y) =>  x.SalesOrderID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Partner).HasFieldName("_partner").WithOpposite(x => x.Payments).ToColumn("PartnerID").HasConstraint((x, y) =>  x.PartnerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Partner> GetPartnerMappingConfiguration()
		{
			MappingConfiguration<Partner> configuration = this.GetPartnerClassConfiguration();
			this.PreparePartnerPropertyConfigurations(configuration);
			this.PreparePartnerAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Partner> GetPartnerClassConfiguration()
		{
			MappingConfiguration<Partner> configuration = new MappingConfiguration<Partner>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Partner");
	
			return configuration;
		}
	
		public void PreparePartnerPropertyConfigurations(MappingConfiguration<Partner> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.MSAReference).HasFieldName("_mSAReference").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MSAReference").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.PartnerType).HasFieldName("_partnerType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerType").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.PartnerShare).HasFieldName("_partnerShare").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerShare").IsNullable().HasColumnType("tinyint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.DateRegistered).HasFieldName("_dateRegistered").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DateRegistered").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.PrimaryContact).HasFieldName("_primaryContact").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PrimaryContact").IsNullable().HasColumnType("nvarchar").HasLength(25);
			configuration.HasProperty(x => x.PrimaryContactDetail).HasFieldName("_primaryContactDetail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PrimaryContactDetail").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.SecondaryContact).HasFieldName("_secondaryContact").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SecondaryContact").IsNullable().HasColumnType("nvarchar").HasLength(25);
			configuration.HasProperty(x => x.SecondaryContactDetail).HasFieldName("_secondaryContactDetail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SecondaryContactDetail").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.TechnicalContact).HasFieldName("_technicalContact").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TechnicalContact").IsNullable().HasColumnType("nvarchar").HasLength(25);
			configuration.HasProperty(x => x.TechnicalContactDetail).HasFieldName("_technicalContactDetail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TechnicalContactDetail").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.AdminContact).HasFieldName("_adminContact").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AdminContact").IsNullable().HasColumnType("nvarchar").HasLength(25);
			configuration.HasProperty(x => x.AdminContactDetail).HasFieldName("_adminContactDetail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AdminContactDetail").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.Escalation).HasFieldName("_escalation").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Escalation").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.MSAContractDocument).HasFieldName("_mSAContractDocument").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MSAContractDocument").IsNullable().HasColumnType("binary");
			configuration.HasProperty(x => x.ServiceDescription).HasFieldName("_serviceDescription").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ServiceDescription").IsNullable().HasColumnType("nvarchar").HasLength(250);
			configuration.HasProperty(x => x.IsActive).HasFieldName("_isActive").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("IsActive").IsNullable().HasColumnType("bit").HasPrecision(0).HasScale(0);
		}
	
		public void PreparePartnerAssociationConfigurations(MappingConfiguration<Partner> configuration)
		{
			configuration.HasAssociation(x => x.Products).HasFieldName("_products").WithOpposite(x => x.Partner).ToColumn("PartnerID").HasConstraint((y, x) =>  x.PartnerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Payments).HasFieldName("_payments").WithOpposite(x => x.Partner).ToColumn("PartnerID").HasConstraint((y, x) =>  x.PartnerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.OrderDetails).HasFieldName("_orderDetails").WithOpposite(x => x.Partner).ToColumn("PartnerID").HasConstraint((y, x) =>  x.PartnerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<OrderStatusCode> GetOrderStatusCodeMappingConfiguration()
		{
			MappingConfiguration<OrderStatusCode> configuration = this.GetOrderStatusCodeClassConfiguration();
			this.PrepareOrderStatusCodePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrderStatusCode> GetOrderStatusCodeClassConfiguration()
		{
			MappingConfiguration<OrderStatusCode> configuration = new MappingConfiguration<OrderStatusCode>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("OrderStatusCode");
	
			return configuration;
		}
	
		public void PrepareOrderStatusCodePropertyConfigurations(MappingConfiguration<OrderStatusCode> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Title).HasFieldName("_title").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Title").IsNotNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Description").IsNullable().HasColumnType("nvarchar").HasLength(200);
		}
		public MappingConfiguration<OrderEvent> GetOrderEventMappingConfiguration()
		{
			MappingConfiguration<OrderEvent> configuration = this.GetOrderEventClassConfiguration();
			this.PrepareOrderEventPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrderEvent> GetOrderEventClassConfiguration()
		{
			MappingConfiguration<OrderEvent> configuration = new MappingConfiguration<OrderEvent>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("OrderEvent");
	
			return configuration;
		}
	
		public void PrepareOrderEventPropertyConfigurations(MappingConfiguration<OrderEvent> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrderID).HasFieldName("_orderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.EventDate).HasFieldName("_eventDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EventDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.Event).HasFieldName("_event").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Event").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.UserID).HasFieldName("_userID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UserID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<OrderDetail> GetOrderDetailMappingConfiguration()
		{
			MappingConfiguration<OrderDetail> configuration = this.GetOrderDetailClassConfiguration();
			this.PrepareOrderDetailPropertyConfigurations(configuration);
			this.PrepareOrderDetailAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<OrderDetail> GetOrderDetailClassConfiguration()
		{
			MappingConfiguration<OrderDetail> configuration = new MappingConfiguration<OrderDetail>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("OrderDetail");
	
			return configuration;
		}
	
		public void PrepareOrderDetailPropertyConfigurations(MappingConfiguration<OrderDetail> configuration)
		{
			configuration.HasProperty(x => x.SalesOrderID).HasFieldName("_salesOrderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SalesOrderDetailID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_salesOrderDetailID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderDetailID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PartnerID).HasFieldName("_partnerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.UnitPriceDiscount).HasFieldName("_unitPriceDiscount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPriceDiscount").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.OrderQuantity).HasFieldName("_orderQuantity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderQuantity").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.LineTotal).HasFieldName("_lineTotal").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("LineTotal").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.OptusStatus).HasFieldName("_optusStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OptusStatus").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OptusUpdatedBy).HasFieldName("_optusUpdatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OptusUpdatedBy").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OptusUpdateDate).HasFieldName("_optusUpdateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OptusUpdateDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.PartnerStatus).HasFieldName("_partnerStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerStatus").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PartnerUpdatedBy).HasFieldName("_partnerUpdatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerUpdatedBy").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PartnerUpdateDate).HasFieldName("_partnerUpdateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerUpdateDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.CustomerStatus).HasFieldName("_customerStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerStatus").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerUpdatedBy).HasFieldName("_customerUpdatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerUpdatedBy").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerUpdateDate).HasFieldName("_customerUpdateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerUpdateDate").IsNullable().HasColumnType("datetime");
		}
	
		public void PrepareOrderDetailAssociationConfigurations(MappingConfiguration<OrderDetail> configuration)
		{
			configuration.HasAssociation(x => x.Order).HasFieldName("_order").WithOpposite(x => x.OrderDetails).ToColumn("SalesOrderID").HasConstraint((x, y) =>  x.SalesOrderID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Partner).HasFieldName("_partner").WithOpposite(x => x.OrderDetails).ToColumn("PartnerID").HasConstraint((x, y) =>  x.PartnerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Product).HasFieldName("_product").WithOpposite(x => x.OrderDetails).ToColumn("ProductID").HasConstraint((x, y) =>  x.ProductID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Order> GetOrderMappingConfiguration()
		{
			MappingConfiguration<Order> configuration = this.GetOrderClassConfiguration();
			this.PrepareOrderPropertyConfigurations(configuration);
			this.PrepareOrderAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Order> GetOrderClassConfiguration()
		{
			MappingConfiguration<Order> configuration = new MappingConfiguration<Order>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Order");
	
			return configuration;
		}
	
		public void PrepareOrderPropertyConfigurations(MappingConfiguration<Order> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrderDate).HasFieldName("_orderDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.DueDate).HasFieldName("_dueDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DueDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Status").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.TotalSaleAmount).HasFieldName("_totalSaleAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TotalSaleAmount").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SalesPersonID).HasFieldName("_salesPersonID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesPersonID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ModificationDate).HasFieldName("_modificationDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModificationDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.OptusStatus).HasFieldName("_optusStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OptusStatus").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OptusUpdatedBy).HasFieldName("_optusUpdatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OptusUpdatedBy").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OptusUpdateDate).HasFieldName("_optusUpdateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OptusUpdateDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.PartnerStatus).HasFieldName("_partnerStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerStatus").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PartnerUpdatedBy).HasFieldName("_partnerUpdatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerUpdatedBy").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PartnerUpdateDate).HasFieldName("_partnerUpdateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerUpdateDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.CustomerStatus).HasFieldName("_customerStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerStatus").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerUpdatedBy).HasFieldName("_customerUpdatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerUpdatedBy").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerUpdateDate).HasFieldName("_customerUpdateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerUpdateDate").IsNullable().HasColumnType("datetime");
		}
	
		public void PrepareOrderAssociationConfigurations(MappingConfiguration<Order> configuration)
		{
			configuration.HasAssociation(x => x.Payments).HasFieldName("_payments").WithOpposite(x => x.Order).ToColumn("SalesOrderID").HasConstraint((y, x) =>  x.SalesOrderID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.OrderDetails).HasFieldName("_orderDetails").WithOpposite(x => x.Order).ToColumn("SalesOrderID").HasConstraint((y, x) =>  x.SalesOrderID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Customer).HasFieldName("_customer").WithOpposite(x => x.Orders).ToColumn("CustomerID").HasConstraint((x, y) =>  x.CustomerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Billings).HasFieldName("_billings").WithOpposite(x => x.Order).ToColumn("SalesOrderID").HasConstraint((y, x) =>  x.SalesOrderID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<MarketPlaceSection> GetMarketPlaceSectionMappingConfiguration()
		{
			MappingConfiguration<MarketPlaceSection> configuration = this.GetMarketPlaceSectionClassConfiguration();
			this.PrepareMarketPlaceSectionPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<MarketPlaceSection> GetMarketPlaceSectionClassConfiguration()
		{
			MappingConfiguration<MarketPlaceSection> configuration = new MappingConfiguration<MarketPlaceSection>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("MarketPlaceSection");
	
			return configuration;
		}
	
		public void PrepareMarketPlaceSectionPropertyConfigurations(MappingConfiguration<MarketPlaceSection> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
		}
		public MappingConfiguration<Customer> GetCustomerMappingConfiguration()
		{
			MappingConfiguration<Customer> configuration = this.GetCustomerClassConfiguration();
			this.PrepareCustomerPropertyConfigurations(configuration);
			this.PrepareCustomerAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Customer> GetCustomerClassConfiguration()
		{
			MappingConfiguration<Customer> configuration = new MappingConfiguration<Customer>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Customer");
	
			return configuration;
		}
	
		public void PrepareCustomerPropertyConfigurations(MappingConfiguration<Customer> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UID).HasFieldName("_uID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UID").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.AccountReference).HasFieldName("_accountReference").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AccountReference").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Address").IsNullable().HasColumnType("nvarchar").HasLength(200);
			configuration.HasProperty(x => x.ContactPerson).HasFieldName("_contactPerson").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactPerson").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.ContactDetail).HasFieldName("_contactDetail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactDetail").IsNullable().HasColumnType("nvarchar").HasLength(200);
		}
	
		public void PrepareCustomerAssociationConfigurations(MappingConfiguration<Customer> configuration)
		{
			configuration.HasAssociation(x => x.Orders).HasFieldName("_orders").WithOpposite(x => x.Customer).ToColumn("CustomerID").HasConstraint((y, x) =>  x.CustomerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Billings).HasFieldName("_billings").WithOpposite(x => x.Customer).ToColumn("CustomerID").HasConstraint((y, x) =>  x.CustomerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Billing> GetBillingMappingConfiguration()
		{
			MappingConfiguration<Billing> configuration = this.GetBillingClassConfiguration();
			this.PrepareBillingPropertyConfigurations(configuration);
			this.PrepareBillingAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Billing> GetBillingClassConfiguration()
		{
			MappingConfiguration<Billing> configuration = new MappingConfiguration<Billing>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Billing");
	
			return configuration;
		}
	
		public void PrepareBillingPropertyConfigurations(MappingConfiguration<Billing> configuration)
		{
			configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SalesOrderID).HasFieldName("_salesOrderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.SalesOrderDetailID).HasFieldName("_salesOrderDetailID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderDetailID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PaymentDate).HasFieldName("_paymentDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PaymentDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.BilledAmount).HasFieldName("_billedAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BilledAmount").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.BillMethod).HasFieldName("_billMethod").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BillMethod").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.BillingAccountNumber).HasFieldName("_billingAccountNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BillingAccountNumber").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.BillingAccountName).HasFieldName("_billingAccountName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BillingAccountName").IsNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.InvoiceReferenceNumber).HasFieldName("_invoiceReferenceNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("InvoiceReferenceNumber").IsNullable().HasColumnType("nvarchar").HasLength(50);
		}
	
		public void PrepareBillingAssociationConfigurations(MappingConfiguration<Billing> configuration)
		{
			configuration.HasAssociation(x => x.Customer).HasFieldName("_customer").WithOpposite(x => x.Billings).ToColumn("CustomerID").HasConstraint((x, y) =>  x.CustomerID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Order).HasFieldName("_order").WithOpposite(x => x.Billings).ToColumn("SalesOrderID").HasConstraint((x, y) =>  x.SalesOrderID == y.ID ).WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<ProductView> GetProductViewMappingConfiguration()
		{
			MappingConfiguration<ProductView> configuration = this.GetProductViewClassConfiguration();
			this.PrepareProductViewPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<ProductView> GetProductViewClassConfiguration()
		{
			MappingConfiguration<ProductView> configuration = new MappingConfiguration<ProductView>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("ProductView");
	
			return configuration;
		}
	
		public void PrepareProductViewPropertyConfigurations(MappingConfiguration<ProductView> configuration)
		{
            configuration.HasProperty(x => x.ID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_iD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ID").IsNotNullable().HasColumnType("bigint").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductCode).HasFieldName("_productCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductCode").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.PartnerProductName).HasFieldName("_partnerProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.SSOTProductName).HasFieldName("_sSOTProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SSOTProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.SAPProductName).HasFieldName("_sAPProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SAPProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.GSMISProductName).HasFieldName("_gSMISProductName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("GSMISProductName").IsNullable().HasColumnType("nvarchar").HasLength(100);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Description").IsNullable().HasColumnType("nvarchar").HasLength(250);
			configuration.HasProperty(x => x.DateRegistered).HasFieldName("_dateRegistered").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DateRegistered").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.EffectiveDate).HasFieldName("_effectiveDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EffectiveDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.EndDate).HasFieldName("_endDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EndDate").IsNullable().HasColumnType("datetime");
			configuration.HasProperty(x => x.ChargeFrequency).HasFieldName("_chargeFrequency").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ChargeFrequency").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.ChargeType).HasFieldName("_chargeType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ChargeType").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.Charge).HasFieldName("_charge").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Charge").IsNullable().HasColumnType("numeric").HasPrecision(18).HasScale(0);
			configuration.HasProperty(x => x.ApplyGST).HasFieldName("_applyGST").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ApplyGST").IsNullable().HasColumnType("bit").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RevenuShareType).HasFieldName("_revenuShareType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RevenuShareType").IsNullable().HasColumnType("nvarchar").HasLength(20);
			configuration.HasProperty(x => x.FixedOperatorRevenue).HasFieldName("_fixedOperatorRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FixedOperatorRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.FixedPartnerRevenue).HasFieldName("_fixedPartnerRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FixedPartnerRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PercentageOperatorRevenue).HasFieldName("_percentageOperatorRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PercentageOperatorRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PercentagePartnerRevenue).HasFieldName("_percentagePartnerRevenue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PercentagePartnerRevenue").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecurringFixedMonth).HasFieldName("_recurringFixedMonth").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RecurringFixedMonth").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ProductStatus).HasFieldName("_productStatus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductStatus").IsNullable().HasColumnType("nvarchar").HasLength(20);
            configuration.HasProperty(x => x.MarketPlaceSection).HasFieldName("_expr1").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MarketPlaceSection").IsNotNullable().HasColumnType("nvarchar").HasLength(100);
            configuration.HasProperty(x => x.PartnerName).HasFieldName("_expr2").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PartnerName").IsNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.ProductCategoryName).HasFieldName("_expr3").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductCategoryName").IsNotNullable().HasColumnType("nvarchar").HasLength(100);
		}
	}
}
#pragma warning restore 1591
